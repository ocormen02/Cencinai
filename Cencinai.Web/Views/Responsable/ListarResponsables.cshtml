@using Cencinai.Data.Models;
@using Cencinai.Logic.Models;
@model PagedResult<ResponsableModel>

@{
    ViewData["Title"] = "Responsables";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index" onclick="displayBusyIndicator()">Menú</a></li>
    <li class="breadcrumb-item active">Responsables</li>
</ol>
<h4>Responsables</h4>
<hr />
<div class="container">
    <div class="row">
        <div class="col-4 buttonPosition offset-md-10">
            <a asp-controller="Responsable" asp-action="AgregarResponsable" class="btn btn-primary" onclick="displayBusyIndicator()">
                <i class="fa fa-plus-circle"></i> Agregar Responsable
            </a>
        </div>
    </div>
    <form asp-action="ListarResponsables" method="get" class="row">
        <div class="col-3">
            <div class="form-group">
                <label for="filter"></label>
                <input type="text" class="form-control" id="filtro" name="filtro" placeholder="Filtro" value="@ViewData["filtro"]">
            </div>
        </div>
        <div class="col-4 buttonPosition">
            <input class="btn btn-info" type="submit" value="Buscar" onclick="displayBusyIndicator()" />
        </div>
    </form>

    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col">Nombre</th>
                <th scope="col">Primer Apellido</th>
                <th scope="col">Segundo Apellido</th>
                <th scope="col">Teléfono</th>
                <th scope="col">&nbsp;&nbsp;Herramientas</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Result)
            {
            <tr class="table-secondary">
                <td scope="row">
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td scope="row">
                    @Html.DisplayFor(modelItem => item.PrimerApellido)
                </td>
                <td scope="row">
                    @Html.DisplayFor(modelItem => item.SegundoApellido)
                </td>
                <td scope="row">
                    @Html.DisplayFor(modelItem => item.Telefono)
                </td>
                <td>
                    <a asp-action="DetalleResponsable" asp-route-id="@(item.Id)" onclick="displayBusyIndicator()">
                        &nbsp;&nbsp;<i class="fa fa-eye" style="font-size:20px"></i>&nbsp;&nbsp;|
                    </a>
                    <a asp-action="EditarResponsable" asp-route-id="@(item.Id)" onclick="displayBusyIndicator()">
                        &nbsp;&nbsp;<i class="fa fa-pencil" style="font-size:20px"></i>&nbsp;&nbsp;|
                    </a>
                    <a asp-action="BorrarResponsable" asp-route-id="@(item.Id)" onclick="displayBusyIndicator()">
                        &nbsp;&nbsp;<i class="fa fa-trash" style="font-size:20px"></i>
                    </a>
                </td>
            </tr>
            }
        </tbody>
    </table>
    @if (Model.PageCount == 0)
    {
        <h6>No se encuentran responsables registrados.</h6>
        <br />
    }
    @{
        var prevDisabled = Model.CurrentPage == 1 ? "disabled" : "";
        var nextDisabled = Model.CurrentPage == Model.PageCount ? "disabled" : "";
    }
    @if (Model.PageCount > 1)
    {
        <div>
            <ul class="pagination">
                <li class="page-item @prevDisabled">
                    <a asp-action="ListarResponsables" asp-route-page="@(Model.CurrentPage - 1)" class="box-link" onclick="displayBusyIndicator()">&laquo;</a>
                </li>
                <li class="page-item @nextDisabled">
                    <a asp-action="ListarResponsables" asp-route-page="@(Model.CurrentPage + 1)" class="box-link" onclick="displayBusyIndicator()">&raquo;</a>
                </li>
                <li></li>
                <li class="page-info offset-md-10">Página @Model.CurrentPage de @Model.PageCount</li>
            </ul>
        </div>
    }
</div>